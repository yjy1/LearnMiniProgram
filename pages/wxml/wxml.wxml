 <!-- 1.wxml的格式 -->
 <!-- 双标签 -->
 <!-- <view>
   
 </view> -->
 <!-- 单标签 -->
 <!-- <image/>
 <input/> -->

 <!-- 2.Mustache语法 -->
 <view>
   {{message}}
 </view>
 <view>
   {{firstName}}  {{lastName}}
 </view>
 <view>
   {{age >= 18 ? '成年人' : '未成年人'}}
   {{'i am string'}}
 </view>
 <view>{{time}}</view>
<view>
  =================
</view>
 <button bindtap="handleBtnClick" size="mini">切换颜色</button>
 <view class="box {{isActive ? 'active' : ''}}">
   哈哈哈
 </view>

 <view>
   ---------------条件判断---------------
 </view>
 <!-- 控制显示/隐藏 -->
 <!-- 1.wx:if的使用 -->
 <button size="mini" bindtap="handleIsShow">控制显示/隐藏</button>
 <view wx:if="{{isShow}}">
   哈哈哈
 </view>

 <!-- 2.wx:elif/wx:else -->
 <view wx:if="{{score >=90 }}">
   优秀
 </view>
 <view wx:elif="{{score >=80 && score < 90 }}">
   良好
 </view>
 <view wx:elif="{{score >=70 && score < 80 }}">
   中
 </view>
 <view wx:elif="{{score >=60 }}">
   及格
 </view>
 <view wx:else>
   不及格
 </view>

 <!-- hidden属性 -->
 <!-- 设置display: block进行隐藏，组件仍然存在
      切换频繁时用
-->
  <view hidden="{{isHidden}}">
    我是hidden属性的内容 hidden
  </view>
  <!-- 删除dom元素，显示时创建，隐藏时被销毁 
       切换不频繁时用
  -->
  <view wx:if="{{isHidden2}}">
    我是hidden属性的内容 wx:if
  </view>

  <view>
    ---------------列表渲染---------------
  </view>
  <!-- 1.wx:for的回顾 -->
  <!-- 1.1遍历数组/字符串/数组 -->
  <!-- <view wx:for="{{[1,2,3]}}"> -->
    <!-- 自动生成的变量：item,index -->
    <!-- {{item}}--{{index}}
  </view>
  <view>
    ----------------------
  </view> -->
  <!-- 遍历字符串 -->
  <!-- <view wx:for="coderYcj">
    {{item}}--{{index}}
  </view>
  <view>
    ----------------------
  </view> -->
  <!-- 遍历数字，9次 -->
  <!-- <view wx:for="{{9}}">
    {{item}}--{{index}}
  </view> -->

  <!-- 控制一批组件 -->
  <!-- <block wx:if="{{isShowBlock}}">
    <button size="mini">按钮</button>
    <view>呵呵呵</view>
    <text>我是内容</text>
  </block> -->
  <!-- 最外层的view会创建组件,会消耗系统资源  -->
  <!-- <view wx:for="{{3}}">
    <button size="mini">按钮</button>
    <view>呵呵呵</view>
    <text>我是内容</text>
  </view> -->
  <!-- 最外层的block不会创建组件,不会消耗系统资源 
       不会在页面做任何渲染，只接受控制属性
  -->
  <!-- <block wx:for="{{3}}">
    <button size="mini">按钮</button>
    <view>呵呵呵</view>
    <text>我是内容</text>
  </block> -->

  <!-- 3.item、index起名字 -->
  <!-- <view wx:for="{{movies}}" wx:for-item="movie" wx:for-index="idx">{{movie}}-{{idx}}</view>
  <block wx:for="{{nums}}" wx:for-item="innerNums">
    <block wx:for="{{innerNums}}">{{item}} \n</block>
  </block> -->

  <!-- 4.key:的作用 -->
  <!-- <view class="container">
    <view wx:for="{{letters}}" wx:key="index" >{{item}}</view>
  </view> -->

<view>---------------template---------------</view>
<!-- 之前小程序不支持自定义组件，为了进行代码的复用：template -->
<!-- <button>按钮/警告/点击</button>
<view>你好，小程序/hello World</view> -->
<!-- 定义模板 -->
<!-- <template name="contentTpl">
  <button size="mini">{{btnText}}</button>
  <view>{{viewText}}</view>
</template> -->

<!-- 引入模板 -->
<import src="../../wxml/template"/>
<import src="../../wxml/abc"/>
<!-- 结论：include不能导入模板 -->
<!-- 关于wxml的导入有两种方式：
     import导入：
      1.主要导入template
      2.特点：不能进行递归导入
     include引入：
      1.将公共的wxml组件抽取到一个文件中
      2.特点：不能导入template/wxs，可以进行递归引入
      
-->
<!-- <include src="../../wxml/template"/> -->

<!-- 使用模板，is="名称"
     为模板传入参数，data="{{key1:value1,key2:value2}}"
     模板里的变量只能在使用模板的时改变
-->
<template is="contentTpl" data="{{btnText:'警告',viewText:'文本1'}}"/>
<template is="contentTpl" data="{{btnText:'点击',viewText:'文本2'}}"/>
<template is="contentTpl" data="{{btnText:'按钮',viewText:'文本3'}}"/>

<template is="abcTpl"/> 

<!-- 错误写法 -->
<!-- <view>{{25.666666666666.toFixed(2)}}</view> -->

<!-- 不能直接调用Page/Component里的函数 -->
<!-- <view>{{num2Fixed(25.666666666666)}}</view> -->
